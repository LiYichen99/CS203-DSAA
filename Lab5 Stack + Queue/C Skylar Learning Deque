import java.util.Scanner;
class Node{
    int element;
    Node prev;
    Node next;
    public Node(int element){
        this.element = element;
        prev = null;
        next = null;
    }
    public int getElement(){return element;}

}
class LinkedList{
    Node head;
    Node tail;
    int count = 0;
    public LinkedList(){
        head = new Node(0);
        tail = new Node(0);
        head.next = tail;
        tail.prev = head;
    }
    public int size(){return count;}
    public boolean isEmpty(){return count==0;}
    public void addHead(int element){
        Node node = new Node(element);
        node.prev = head;
        node.next = head.next;
        head.next.prev = node;
        head.next = node;
        count++;
    }
    public void addTail(int element){
        Node node = new Node(element);
        node.prev = tail.prev;
        node.next = tail;
        tail.prev.next = node;
        tail.prev = node;
        count++;
    }
    public int removeHead(){
        if(isEmpty()) {
            return -1;
        }else {
            Node node = head.next;
            head.next = node.next;
            node.next.prev = head;
            node.prev = null;
            node.next = null;
            count--;
            return node.getElement();
        }
    }
    public int removeTail(){
        if(isEmpty()) {
            return -1;
        }else{
            Node node = tail.prev;
            tail.prev = node.prev;
            node.prev.next = tail;
            node.prev = null;
            node.next = null;
            count--;
            return node.getElement();
        }
    }

}

public class Main {

    public static void main(String[] args) {
	Scanner in = new Scanner(System.in);
	while(in.hasNext()){
	    int n = in.nextInt();
	    int q = in.nextInt();
	    LinkedList[] a = new LinkedList[n];
	    for(int i=0;i<n;i++){
            a[i]=new LinkedList();
        }
	    for(int j = 0;j<q;j++){
	        int op = in.nextInt();
	        if(op == 1){
	            int u = in.nextInt();
	            int w = in.nextInt();
	            int Val = in.nextInt();
	            if(w == 0){
	                a[u-1].addHead(Val);
                }else if(w == 1){
	                a[u-1].addTail(Val);
                }
            }else if(op == 2){
	            int u = in.nextInt();
	            int w = in.nextInt();
	            if(w == 0){
	                System.out.println(a[u-1].removeHead());
                }else if(w == 1){
	                System.out.println(a[u-1].removeTail());
                }
        }else if(op == 3){
	            int u = in.nextInt();
	            int v = in.nextInt();
	            int w = in.nextInt();
	            if(w == 0){
	                int b = a[v-1].removeHead();
	                while(b!=-1){
	                    a[u-1].addTail(b);
	                    b = a[v-1].removeHead();
                    }
                }else if(w == 1){
                    int b = a[v-1].removeTail();
                    while(b!=-1){
                        a[u-1].addTail(b);
                        b = a[v-1].removeTail();
                    }
                }
            }
        }

    }
    }
}
