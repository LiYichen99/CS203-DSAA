import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int T = input.nextInt();
        for (int i = 0; i < T; i++) {
            int n = input.nextInt();
            int[] s = new int[n];
            for (int j = 0; j < n; j++) {
                s[j] = input.nextInt();
            }
            System.out.println(waysToVictory(s, n));
        }
    }

    public static int waysToVictory(int[] s, int n) {
        if (n == 1) {
            return 1;
        } else {
            if (state(s)) {
                return 0;
            } else {

                int[][] t = new int[n][24];
                int[] r = new int[24];

                int way = 0;
                for (int i = 0; i < n; i++) {
                    String a = Integer.toBinaryString(s[i]);
                    for (int j = 0; j < a.length(); j++) {
                        t[i][j] = Integer.parseInt(a.substring(a.length() - j - 1, a.length() - j));
                        r[j] ^= t[i][j];
                    }
                }

                for (int j = 0; j < n; j++) {
                    int b = 0;
                    for (int i = 0; i < r.length; i++) {
                        int c = 1;
                        for(int k = 0; k<i;k++){
                            c *= 2;
                        }
                        if (r[i] == 1) {
                            if (t[j][i] == 0) {
                                t[j][i] = 1;
                                b += c;
                            } else {
                                t[j][i] = 0;
                            }

                        } else {
                            b += t[j][i] * c;
                        }
                    }
                    if (b < s[j]) {
                        way++;
                    }
                }
                return way;
            }
        }
    }



    public static boolean state(int[] s){
        int t = s[0];
        for(int i = 1;i<s.length;i++){
            t = t^s[i];
        }
        if( t == 0){
            return true;
        }else{
            return false;
        }
    }

}
