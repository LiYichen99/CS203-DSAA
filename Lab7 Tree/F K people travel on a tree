import java.util.ArrayList;
import java.util.Scanner;
class Node{
    int val;
    boolean isPerson;
    ArrayList<Node> conn;
    public Node(int val){
        this.val = val;
        isPerson = false;
        conn = new ArrayList<>();
    }
    public void setPerson(boolean person) {
        isPerson = person;
    }
    public boolean isPerson() {
        return isPerson;
    }
    public int getVal(){
        return val;
    }
    public void addConn(Node node){
        conn.add(node);
    }
    public ArrayList<Node> getConn(){
        return conn;
    }


}

public class Main {
    private static int len;
    public static Node p;
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int T = in.nextInt();
        for (int i = 0; i < T; i++) {
            int n = in.nextInt();
            int k = in.nextInt();
            Node[] nodes = new Node[n];
            for(int j = 0;j<n;j++){
                nodes[j] = new Node(j+1);
            }
            for(int j = 1;j<n;j++){
                int a = in.nextInt();
                int b = in.nextInt();
                nodes[a-1].addConn(nodes[b-1]);
                nodes[b-1].addConn(nodes[a-1]);
            }
            for(int j = 0;j<k;j++){
                nodes[in.nextInt()-1].setPerson(true);
            }
            if(k == 1){
                System.out.println("0");
            }else{
                len = 0;
                dfs(nodes[0], 0, 0);
                len = 0;
                dfs(p, 0, 0);
                if(len%2==0){
                    len = len/2;
                }else{
                    len = len/2+1;
                }
                System.out.println(len);
            }
        }
    }
    public static void dfs(Node a, int dis, int far){
        if(a.isPerson()&&len<dis){
            len = dis;
            p = a;
        }
        for(int i = 0;i<a.getConn().size();i++){
            if(a.getConn().get(i).getVal()!=far){
                dfs(a.getConn().get(i),dis+1, a.getVal());
            }
        }
    }
}
